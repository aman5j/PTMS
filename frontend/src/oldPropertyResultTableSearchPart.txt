   <PropertyResultsTable
                  data={sortedResults}   // sortedResults
                  sortField={sortField}
                  sortDir={sortDir}
                  onSort={(field) => {
                    if (field === sortField) {
                      setSortDir(sortDir === "asc" ? "desc" : "asc");
                    } else {
                      setSortField(field);
                      setSortDir("asc");
                    }
                  }}
                  onEdit={(row) => {
                    /* open edit modal or navigate */
                    
                  }}
                  onDelete={async(row) => {
                    /* show confirm, then delete */
                     if (!window.confirm("Delete this property?")) return;
                        const result = await postData("propertydetails/delete_property", { _id: row._id });
                        if (result.status) {
                          // setSnack({ open: true, message: "User deleted!" });
                          // fetchAllUsers();
                          alert("good property id deleted");
                          fetchAllProperties();
                        } else {
                          // setSnack({ open: true, message: "Failed to delete user" });
                          alert("sorry bro, u done something wrong");
                        }
                  }}
                />